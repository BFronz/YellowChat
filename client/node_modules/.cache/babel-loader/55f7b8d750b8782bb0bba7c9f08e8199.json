{"ast":null,"code":"import _slicedToArray from \"/Users/robertfronczak/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/robertfronczak/yellow-chat/client/src/components/Quickreviews.js\";\nimport React, { useEffect, useState } from \"react\";\nimport APIReviews from \"../utils/APIReviews\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Reviews() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1]; // Load all books and store them with setBooks\n\n\n  useEffect(function () {\n    loadReviews();\n  }, []); // Loads all books and sets them to books\n\n  function loadReviews() {\n    APIReviews.getReviews().then(function (res) {\n      return setReviews(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Latest reviews:\"), reviews.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, reviews.map(function (review) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: review._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, review.author, \": \", review.title));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default Reviews;","map":{"version":3,"sources":["/Users/robertfronczak/yellow-chat/client/src/components/Quickreviews.js"],"names":["React","useEffect","useState","APIReviews","Col","Row","Container","List","ListItem","Reviews","reviews","setReviews","loadReviews","getReviews","then","res","data","catch","err","console","log","length","map","review","_id","author","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB;AAFiB,kBAGaP,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,MAGVQ,OAHU;AAAA,MAGDC,UAHC,kBAMjB;;;AACAV,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT,CAPiB,CAWjB;;AACA,WAASA,WAAT,GAAuB;AACrBT,IAAAA,UAAU,CAACU,UAAX,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,aACPJ,UAAU,CAACI,GAAG,CAACC,IAAL,CADH;AAAA,KADX,EAIGC,KAJH,CAIS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAJZ;AAKD;;AAAA;AAID,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,EAIGR,OAAO,CAACW,MAAR,gBACK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCX,OAAO,CAACY,GAAR,CAAY,UAAAC,MAAM,EAAI;AACnB,wBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MAAM,CAACE,MADZ,QACsBF,MAAM,CAACG,KAD7B,CADR,CADJ;AAOH,GARA,CADD,CADL,gBAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAjBN,CADF,CADF,CADF;AA4BD;;AAGD,eAAejB,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport APIReviews from \"../utils/APIReviews\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction Reviews() {\n\n  // Setting our component's initial state\n  const [reviews, setReviews] = useState([])\n\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadReviews()\n  }, [])\n\n  // Loads all books and sets them to books\n  function loadReviews() {\n    APIReviews.getReviews()\n      .then(res =>\n        setReviews(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n\n\n  return (\n    <Container fluid>\n      <Row>   \n        <Col size=\"md-6 sm-12\">\n          \n        <h1>Latest reviews:</h1>\n         \n          {reviews.length ? (\n                <List>\n                {reviews.map(review => {\n                    return (\n                        <ListItem key={review._id}>\n                                <strong>\n                                    {review.author}: {review.title}\n                                </strong>     \n                        </ListItem>\n                    );\n                })}\n            </List>\n          ) : (\n              <h3>No Results to Display</h3>\n            )}\n        </Col>\n      \n      </Row>\n\n    </Container>\n  );\n}\n\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}