{"ast":null,"code":"import _slicedToArray from \"/Users/robertfronczak/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/robertfronczak/yellow-chat/client/src/components/Quickreviews.js\";\nimport React, { useEffect, useState } from \"react\";\nimport APIReviews from \"../utils/APIReviews\";\nimport { Col, Row, Container } from \"./Grid\";\nimport { List, ListItem } from \"./List\";\n\nfunction Reviews() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1]; // Load all books and store them with setBooks\n\n\n  useEffect(function () {\n    loadReviews();\n  }, []); // Loads all books and sets them to books\n\n  function loadReviews() {\n    APIReviews.getReviews().then(function (res) {\n      shuffleArray(res.data);\n      setReviews(shuffleArray(res.data));\n      console.log(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ;\n\n  function shuffleArray(array) {\n    var i = array.length - 1; // if you want all in array to suffle\n\n    for (; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Latest Reviews:\"), reviews.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, reviews.map(function (review) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: review._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, review.author, \": \", review.title));\n  })) : /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Be the first to write a review... \"))));\n}\n\nexport default Reviews;","map":{"version":3,"sources":["/Users/robertfronczak/yellow-chat/client/src/components/Quickreviews.js"],"names":["React","useEffect","useState","APIReviews","Col","Row","Container","List","ListItem","Reviews","reviews","setReviews","loadReviews","getReviews","then","res","shuffleArray","data","console","log","catch","err","array","i","length","j","Math","floor","random","temp","map","review","_id","author","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,QAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,QAA/B;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB;AAFiB,kBAGaP,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,MAGVQ,OAHU;AAAA,MAGDC,UAHC,kBAMjB;;;AACAV,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT,CAPiB,CAWjB;;AACA,WAASA,WAAT,GAAuB;AACrBT,IAAAA,UAAU,CAACU,UAAX,GACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACXC,MAAAA,YAAY,CAACD,GAAG,CAACE,IAAL,CAAZ;AACAN,MAAAA,UAAU,CAACK,YAAY,CAACD,GAAG,CAACE,IAAL,CAAb,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB;AACC,KALL,EAOGG,KAPH,CAOS,UAAAC,GAAG;AAAA,aAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,KAPZ;AAQD;;AAAA;;AAGD,WAASL,YAAT,CAAsBM,KAAtB,EAA6B;AAC1B,QAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB,CAD0B,CACA;;AAC3B,WAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AACjB,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,UAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACAD,MAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,MAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACD;;AACD,WAAOP,KAAP;AACD;;AAMD,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,EAIGZ,OAAO,CAACc,MAAR,gBACK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCd,OAAO,CAACoB,GAAR,CAAY,UAAAC,MAAM,EAAI;AACnB,wBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MAAM,CAACE,MADZ,QACsBF,MAAM,CAACG,KAD7B,CADR,CADJ;AAOH,GARA,CADD,CADL,gBAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAjBN,CADF,CADF,CADF;AA4BD;;AAGD,eAAezB,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport APIReviews from \"../utils/APIReviews\";\nimport { Col, Row, Container } from \"./Grid\";\nimport { List, ListItem } from \"./List\";\n\nfunction Reviews() {\n\n  // Setting our component's initial state\n  const [reviews, setReviews] = useState([])\n\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadReviews()\n  }, [])\n\n  // Loads all books and sets them to books\n  function loadReviews() {\n    APIReviews.getReviews()\n      .then(res => {\n        shuffleArray(res.data)\n        setReviews(shuffleArray(res.data))\n        console.log(res.data);\n        } \n      )\n      .catch(err => console.log(err));\n  };\n\n\n  function shuffleArray(array) {\n     let i = array.length - 1; // if you want all in array to suffle\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n  \n\n\n\n\n  return (\n    <Container fluid>\n      <Row>   \n        <Col size=\"md-6 sm-12\">\n          \n        <h6>Latest Reviews:</h6>\n         \n          {reviews.length ? (\n                <List>\n                {reviews.map(review => {\n                    return (\n                        <ListItem key={review._id}>\n                                <strong>\n                                    {review.author}: {review.title}\n                                </strong>     \n                        </ListItem>\n                    );\n                })}\n            </List>\n          ) : (\n              <h6>Be the first to write a review... </h6>\n            )}\n        </Col>\n      \n      </Row>\n\n    </Container>\n  );\n}\n\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}