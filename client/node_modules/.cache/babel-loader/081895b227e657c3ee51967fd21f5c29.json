{"ast":null,"code":"import _classCallCheck from \"/Users/elenabaurkot/Desktop/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elenabaurkot/Desktop/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elenabaurkot/Desktop/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elenabaurkot/Desktop/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elenabaurkot/Desktop/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elenabaurkot/Desktop/yellow-chat/client/src/pages/Vendors.js\";\n// import React, { Component } from \"react\";\n// import Jumbotron from \"../components/Jumbotron\";\n// import Container from \"../components/Container\";\n// import Row from \"../components/Row\";\n// import Column from \"../components/Column\";\n// import { Link } from \"react-router-dom\";\n// import { List, ListItem } from \"../components/List\";\n// import { getVendors } from \"../utils/API\";\n// import Navy from \"../components/Navy\"\n// import Reviews from \"./Reviews\"\n// import { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n//  // get all vendors and displays them for chatting\n// class Vendors extends Component {\n//   state = {\n//     userList: []\n//   }\n//  static propTypes = {\n//    getVendors: PropTypes.func.isRequired,\n//    auth: PropTypes.object.isRequired\n//  }\n//   handleGetVendors = () => {\n//     getVendors().then(({ data: userList }) => {\n//       console.log(\"getVendors\", userList);\n//       this.setState({ userList })\n//     }).catch(err => console.log(err))\n//   }\n//   componentDidMount() {\n//     this.handleGetVendors();\n//   }\n//   render() {\n//     const { user } = this.props.auth;\n//     return (\n//       <>\n//         <Navy />\n//         <Container fluid>\n//           <Row>\n//             <Column size=\"md-6 sm-12\">\n//               <Jumbotron fluid bg={'light'}\n//                 color={'dark'}\n//                 pageTitle={'Vendors'}\n//               />\n//               {user ? (\n//                 <div>\n//                   <List>\n//                     {user.map(user => (\n//                       <ListItem key={user._id}>\n//                         <strong>\n//                           <Link to={\"/chat/\" + user.username}>Click to Chat <span role=\"img\" aria-label=\"sheep\">ðŸ’¬</span></Link>\n//                           <div className='new-line'><span className=\"font-weight-bold\">{user.company} </span></div>\n//                           <div className='new-line'>&nbsp; Contact:  {user.name} </div>\n//                           <div className='new-line'>&nbsp; Email: {user.email} </div>\n//                           <div className='new-line'>&nbsp; Products/Services: <span className=\"font-weight-bold\"> {user.categories[0]}  {user.categories[1]}  {user.categories[2]} </span></div>\n//                         </strong>\n//                       </ListItem>\n//                     ))}\n//                   </List>\n//                   <Reviews />\n//                 </div>\n//               ) : (\n//                   <h3>No Results to Display</h3>\n//                 )}\n//             </Column>\n//           </Row>\n//         </Container>\n//       </>\n//     )\n//   }\n// }\n// const mapStateToProps = state => ({\n//   auth: state.auth\n// })\n// export default connect(mapStateToProps, {getVendors})(Vendors);\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Container from \"../components/Container\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem } from \"../components/List\";\nimport { getVendors } from \"../utils/API\";\nimport Navy from \"../components/Navy\";\nimport Reviews from \"./Reviews\";\nimport auth from \"../../../middleware/auth\"; // get all vendors and displays them for chatting\n\nvar Vendors = /*#__PURE__*/function (_Component) {\n  _inherits(Vendors, _Component);\n\n  function Vendors() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Vendors);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Vendors)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userList: []\n    };\n\n    _this.handleGetVendors = function () {\n      getVendors().then(function (_ref) {\n        var userList = _ref.data;\n        console.log(\"getVendors\", userList);\n\n        _this.setState({\n          userList: userList\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Vendors, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleGetVendors();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navy, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        size: \"md-6 sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        fluid: true,\n        bg: 'light',\n        color: 'dark',\n        pageTitle: 'Vendors',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }), this.state.userList.length ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, this.state.userList.map(function (user) {\n        return /*#__PURE__*/React.createElement(ListItem, {\n          key: user._id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/chat/\" + user.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 27\n          }\n        }, \"Click to Chat \", /*#__PURE__*/React.createElement(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"sheep\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 77\n          }\n        }, \"\\uD83D\\uDCAC\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-line\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font-weight-bold\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 53\n          }\n        }, user.company, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-line\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 27\n          }\n        }, \"\\xA0 Contact:  \", user.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-line\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 27\n          }\n        }, \"\\xA0 Email: \", user.email, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-line\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 27\n          }\n        }, \"\\xA0 Products/Services: \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font-weight-bold\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 79\n          }\n        }, \" \", user.categories[0], \"  \", user.categories[1], \"  \", user.categories[2], \" \"))));\n      })), /*#__PURE__*/React.createElement(Reviews, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }\n      })) : /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }\n      }, \"No Results to Display\")))));\n    }\n  }]);\n\n  return Vendors;\n}(Component);\n\nVendors.propTypes = {\n  getVendors: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nexport default Vendors;","map":{"version":3,"sources":["/Users/elenabaurkot/Desktop/yellow-chat/client/src/pages/Vendors.js"],"names":["React","Component","Jumbotron","Container","Row","Column","Link","List","ListItem","getVendors","Navy","Reviews","auth","Vendors","state","userList","handleGetVendors","then","data","console","log","setState","catch","err","length","map","user","_id","username","company","name","email","categories","propTypes","PropTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\n// import Jumbotron from \"../components/Jumbotron\";\n// import Container from \"../components/Container\";\n// import Row from \"../components/Row\";\n// import Column from \"../components/Column\";\n// import { Link } from \"react-router-dom\";\n// import { List, ListItem } from \"../components/List\";\n// import { getVendors } from \"../utils/API\";\n// import Navy from \"../components/Navy\"\n// import Reviews from \"./Reviews\"\n// import { connect } from \"react-redux\";\n// import PropTypes from \"prop-types\";\n\n\n//  // get all vendors and displays them for chatting\n// class Vendors extends Component {\n//   state = {\n//     userList: []\n//   }\n\n//  static propTypes = {\n//    getVendors: PropTypes.func.isRequired,\n//    auth: PropTypes.object.isRequired\n//  }\n \n//   handleGetVendors = () => {\n//     getVendors().then(({ data: userList }) => {\n//       console.log(\"getVendors\", userList);\n//       this.setState({ userList })\n//     }).catch(err => console.log(err))\n//   }\n\n//   componentDidMount() {\n//     this.handleGetVendors();\n//   }\n\n\n//   render() {\n//     const { user } = this.props.auth;\n\n//     return (\n//       <>\n\n//         <Navy />\n//         <Container fluid>\n//           <Row>\n//             <Column size=\"md-6 sm-12\">\n//               <Jumbotron fluid bg={'light'}\n//                 color={'dark'}\n//                 pageTitle={'Vendors'}\n//               />\n//               {user ? (\n//                 <div>\n//                   <List>\n//                     {user.map(user => (\n//                       <ListItem key={user._id}>\n//                         <strong>\n//                           <Link to={\"/chat/\" + user.username}>Click to Chat <span role=\"img\" aria-label=\"sheep\">ðŸ’¬</span></Link>\n//                           <div className='new-line'><span className=\"font-weight-bold\">{user.company} </span></div>\n//                           <div className='new-line'>&nbsp; Contact:  {user.name} </div>\n//                           <div className='new-line'>&nbsp; Email: {user.email} </div>\n                         \n//                           <div className='new-line'>&nbsp; Products/Services: <span className=\"font-weight-bold\"> {user.categories[0]}  {user.categories[1]}  {user.categories[2]} </span></div>\n                          \n//                         </strong>\n\n//                       </ListItem>\n//                     ))}\n//                   </List>\n//                   <Reviews />\n//                 </div>\n//               ) : (\n//                   <h3>No Results to Display</h3>\n//                 )}\n\n//             </Column>\n//           </Row>\n//         </Container>\n\n//       </>\n//     )\n//   }\n// }\n\n// const mapStateToProps = state => ({\n//   auth: state.auth\n// })\n\n// export default connect(mapStateToProps, {getVendors})(Vendors);\n\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Container from \"../components/Container\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem } from \"../components/List\";\nimport { getVendors } from \"../utils/API\";\nimport Navy from \"../components/Navy\"\nimport Reviews from \"./Reviews\"\nimport auth from \"../../../middleware/auth\";\n\n\n // get all vendors and displays them for chatting\nclass Vendors extends Component {\n  state = {\n    userList: []\n  }\n\n   static propTypes = {\n   getVendors: PropTypes.func.isRequired,\n   auth: PropTypes.object.isRequired\n }\n \n  handleGetVendors = () => {\n    getVendors().then(({ data: userList }) => {\n      console.log(\"getVendors\", userList);\n      this.setState({ userList })\n    }).catch(err => console.log(err))\n  }\n\n  componentDidMount() {\n    this.handleGetVendors()\n  }\n\n\n  render() {\n\n    return (\n      <>\n\n        <Navy />\n        <Container fluid>\n          <Row>\n            <Column size=\"md-6 sm-12\">\n              <Jumbotron fluid bg={'light'}\n                color={'dark'}\n                pageTitle={'Vendors'}\n              />\n              {this.state.userList.length ? (\n                <div>\n                  <List>\n                    {this.state.userList.map(user => (\n                      <ListItem key={user._id}>\n                        <strong>\n                          <Link to={\"/chat/\" + user.username}>Click to Chat <span role=\"img\" aria-label=\"sheep\">ðŸ’¬</span></Link>\n                          <div className='new-line'><span className=\"font-weight-bold\">{user.company} </span></div>\n                          <div className='new-line'>&nbsp; Contact:  {user.name} </div>\n                          <div className='new-line'>&nbsp; Email: {user.email} </div>\n                         \n                          <div className='new-line'>&nbsp; Products/Services: <span className=\"font-weight-bold\"> {user.categories[0]}  {user.categories[1]}  {user.categories[2]} </span></div>\n                          \n                        </strong>\n\n                      </ListItem>\n                    ))}\n                  </List>\n                  <Reviews />\n                </div>\n              ) : (\n                  <h3>No Results to Display</h3>\n                )}\n\n            </Column>\n          </Row>\n        </Container>\n\n      </>\n    )\n  }\n}\n\nexport default Vendors;"]},"metadata":{},"sourceType":"module"}