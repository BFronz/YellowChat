{"ast":null,"code":"import _classCallCheck from \"/Users/robertfronczak/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertfronczak/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/robertfronczak/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertfronczak/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/robertfronczak/yellow-chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/robertfronczak/yellow-chat/client/src/pages/Customers.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Container from \"../components/Container\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem } from \"../components/List\";\nimport { getCustomers } from \"../utils/API\";\nimport { saveHistory } from \"../utils/APIHistory\";\nimport Navyvendorside from \"../components/Navyvendorside\"; // get all Customers and displays them for chatting for vendors\n\nvar Customers = /*#__PURE__*/function (_Component) {\n  _inherits(Customers, _Component);\n\n  function Customers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Customers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Customers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userList: []\n    };\n\n    _this.handlegetCustomers = function () {\n      getCustomers().then(function (_ref) {\n        var userList = _ref.data;\n        console.log(\"getCustomers: \", userList);\n\n        _this.setState({\n          userList: userList\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      }); // loads page history into db\n\n      saveHistory({\n        historytype: \"Vendor Page\",\n        username: \"test\",\n        detail: \"arrived at vendor page\",\n        date: Date.now\n      }).then().catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Customers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handlegetCustomers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navyvendorside, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        size: \"md-6 sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        fluid: true,\n        bg: 'light',\n        color: 'dark',\n        pageTitle: 'Vendor Dashboard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }), this.state.userList.length ? /*#__PURE__*/React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, this.state.userList.map(function (user) {\n        return /*#__PURE__*/React.createElement(ListItem, {\n          key: user._id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/chat/username:\" + user.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        }, \"Click to Chat \", /*#__PURE__*/React.createElement(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"sheep\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 81\n          }\n        }, \"\\uD83D\\uDCAC\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-line\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font-weight-bold\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 47\n          }\n        }, \" \", user.name, \" \"), \"  \"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-line\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }\n        }, \"\\xA0 Email: \", user.email, \" \"), user.categories[0] ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-line\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 23\n          }\n        }, \"\\xA0 Intertests: \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font-weight-bold\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 68\n          }\n        }, user.categories[0], \" \", user.categories[1], \" \", user.categories[2])) : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-line\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 23\n          }\n        }, \" \"));\n      })) : /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, \"No Results to Display\")))));\n    }\n  }]);\n\n  return Customers;\n}(Component);\n\nexport default Customers;","map":{"version":3,"sources":["/Users/robertfronczak/yellow-chat/client/src/pages/Customers.js"],"names":["React","Component","Jumbotron","Container","Row","Column","Link","List","ListItem","getCustomers","saveHistory","Navyvendorside","Customers","state","userList","handlegetCustomers","then","data","console","log","setState","catch","err","historytype","username","detail","date","Date","now","length","map","user","_id","name","email","categories"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B,C,CAGC;;IACKC,S;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAG;AADL,K;;UAKRC,kB,GAAqB,YAAM;AACzBN,MAAAA,YAAY,GAAGO,IAAf,CAAoB,gBAAwB;AAAA,YAAfF,QAAe,QAArBG,IAAqB;AAC1CC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,QAA9B;;AACA,cAAKM,QAAL,CAAc;AAACN,UAAAA,QAAQ,EAARA;AAAD,SAAd;AACD,OAHD,EAGGO,KAHH,CAGS,UAAAC,GAAG;AAAA,eAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAJ;AAAA,OAHZ,EADyB,CAO5B;;AACCZ,MAAAA,WAAW,CAAC;AACXa,QAAAA,WAAW,EAAE,aADF;AAETC,QAAAA,QAAQ,EAAK,MAFJ;AAGTC,QAAAA,MAAM,EAAO,wBAHJ;AAIVC,QAAAA,IAAI,EAASC,IAAI,CAACC;AAJR,OAAD,CAAX,CAMCZ,IAND,GAOEK,KAPF,CAOQ,UAACC,GAAD;AAAA,eAASJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAT;AAAA,OAPR;AAUC,K;;;;;;;wCAEmB;AAClB,WAAKP,kBAAL;AACD;;;6BAIQ;AAAA;;AACP,0BACE,uDACA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,EAAE,EAAE,OAArB;AACE,QAAA,KAAK,EAAE,MADT;AAEE,QAAA,SAAS,EAAE,kBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAMG,KAAKF,KAAL,CAAWC,QAAX,CAAoBe,MAApB,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,GAApB,CAAwB,UAAAC,IAAI;AAAA,4BAC3B,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,oBAAoBD,IAAI,CAACP,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAA4D;AAAM,UAAA,IAAI,EAAC,KAAX;AAAiB,wBAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA5D,CAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA0B;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAqCO,IAAI,CAACE,IAA1C,MAA1B,OAHJ,eAKI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyCF,IAAI,CAACG,KAA9C,MALJ,EAOMH,IAAI,CAACI,UAAL,CAAgB,CAAhB,iBACA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAA6C;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCJ,IAAI,CAACI,UAAL,CAAgB,CAAhB,CAApC,OAAyDJ,IAAI,CAACI,UAAL,CAAgB,CAAhB,CAAzD,OAA8EJ,IAAI,CAACI,UAAL,CAAgB,CAAhB,CAA9E,CAA7C,CADA,gBAGA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVN,CAD2B;AAAA,OAA5B,CADH,CADD,gBAoBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCA1BJ,CADF,CADI,CAFF,CADF;AAwCH;;;;EAzEqBlC,S;;AA4ExB,eAAgBW,SAAhB","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Container from \"../components/Container\";\nimport Row from \"../components/Row\";\nimport Column from \"../components/Column\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem } from \"../components/List\";\nimport { getCustomers } from \"../utils/API\";\nimport { saveHistory } from \"../utils/APIHistory\";\nimport Navyvendorside from \"../components/Navyvendorside\"\n\n\n // get all Customers and displays them for chatting for vendors\nclass Customers extends Component {\n    state = {  \n      userList : []\n    }\n    \n    \n    handlegetCustomers = () => {\n      getCustomers().then(({ data: userList }) => {\n        console.log(\"getCustomers: \", userList);\n        this.setState({userList})\n      }).catch(err => console.log(err)) \n\n\n   // loads page history into db\n    saveHistory({\n     historytype: \"Vendor Page\",\n       username:    \"test\",\n       detail:      \"arrived at vendor page\",\n      date:        Date.now\n    })\n    .then(\n    ).catch((err) => console.log(err))\n\n\n    }\n  \n    componentDidMount() {\n      this.handlegetCustomers()\n    }\n  \n  \n\n    render() {\n      return (\n        <>\n        <Navyvendorside/>\n          <Container fluid>\n      <Row>\n        <Column size=\"md-6 sm-12\">\n          <Jumbotron fluid bg={'light'} \n            color={'dark'} \n            pageTitle={'Vendor Dashboard'} \n            />\n                \n          {this.state.userList.length  ? (\n            <List>\n              {this.state.userList.map(user => (\n                <ListItem key={user._id}>\n              \n                    <Link to={\"/chat/username:\" + user.username }>Click to Chat <span role=\"img\" aria-label=\"sheep\">💬</span></Link>    \n                    <div className='new-line'><span className=\"font-weight-bold\"> {user.name} </span>  </div>\n              \n                    <div className='new-line'>&nbsp; Email: {user.email} </div>\n\n                     {user.categories[0] ? (\n                      <div className='new-line'>&nbsp; Intertests: <span className=\"font-weight-bold\">{user.categories[0]} {user.categories[1]} {user.categories[2]}</span></div>\n                      ) : (\n                      <div className='new-line'> </div>\n                     )}           \n                 \n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n\n        </Column>\n      </Row>\n    </Container>\n\n        </>\n      )\n  }\n}\n\nexport default  Customers;"]},"metadata":{},"sourceType":"module"}